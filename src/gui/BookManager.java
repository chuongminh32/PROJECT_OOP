/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;
import controllers.BookController;
import java.util.List;
import java.sql.SQLException; // lỗi kết nối sql
import java.sql.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;


import models.Book;
/**
 *
 * @author HP
 */
public class BookManager extends javax.swing.JFrame {
    
    
    private BookController bookcontroller = new BookController();
    private DefaultTableModel dtablemodel;
    private boolean isEditing = false;
    
    /**
     * Creates new form StaffManager
     * @throws java.sql.SQLException
     * @throws java.lang.ClassNotFoundException
     */
    
    private void setData(List<Book> book_list)  throws SQLException, ClassNotFoundException{
        dtablemodel.setRowCount(0);
        //Truy xuất dữ liệu từ database
        for (Book book: book_list){
            dtablemodel.addRow(new Object[]{book.getId(), book.getTitle(),book.getAuthor(),book.getPublisher() ,
                book.getPublishedYear(), book.getCategory(), book.getTotalCopies(), book.getAvailableCopies()});    
        } //close for
        
    }
    
    private void add_Book(Book book) throws SQLException, ClassNotFoundException{
        //Thêm mới người dùng vào database và hiển thị ra màn hình
        this.bookcontroller.insertBook(book);
        setData(bookcontroller.getAllBooks());  
    }
    private void delete_Book(String id) throws SQLException, ClassNotFoundException{
        //Thêm mới người dùng vào database và hiển thị ra màn hình
        this.bookcontroller.deleteBook(id);
        setData(bookcontroller.getAllBooks()); 
    }
    private void update_Book(Book book, String id) throws SQLException, ClassNotFoundException {
        //Cập nhật người dùng, nếu không tìm thấy id thì thêm mới
        this.bookcontroller.updateBook(book, id);
        setData(bookcontroller.getAllBooks());
    }
            
    private void set_field(boolean root){
        this.titleField.setEnabled(root);
        this.idField.setEnabled(root);
        this.authorField.setEnabled(root);
        this.publisherField.setEnabled(root);
        this.categoryField.setEnabled(root);
        this.totalCopiesField.setEnabled(root);
        this.publishedYearField.setEnabled(root);
        this.avaCopiesField.setEnabled(root);
    }
    private void set_field_value(int row) {
        this.idField.setText(String.valueOf(this.Book_Table.getValueAt(row, 0)));
        this.titleField.setText(String.valueOf(this.Book_Table.getValueAt(row, 1)));
        this.authorField.setText(String.valueOf(this.Book_Table.getValueAt(row, 2)));
        this.publisherField.setText(String.valueOf(this.Book_Table.getValueAt(row, 3)));
        this.publishedYearField.setText(String.valueOf(this.Book_Table.getValueAt(row, 4)));
        this.categoryField.setText(String.valueOf(this.Book_Table.getValueAt(row, 5))); 
        this.totalCopiesField.setText(String.valueOf(this.Book_Table.getValueAt(row, 6)));
        this.avaCopiesField.setText(String.valueOf(this.Book_Table.getValueAt(row, 7)));   
    }

    
            
    public BookManager() throws SQLException, ClassNotFoundException {
        /* HÀM HIỂN THỊ BẢNG QUẢN LÝ NHÂN VIÊN
        */
        initComponents();
        this.dtablemodel = new DefaultTableModel(){
            //Không cho phép người dùng sửa trực tiếp trên bảng
            @Override 
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        this.Book_Table.setModel(dtablemodel);
       
        dtablemodel.addColumn("ID");
        dtablemodel.addColumn("Title");
        dtablemodel.addColumn("Author");
        dtablemodel.addColumn("Publisher");
        dtablemodel.addColumn("Publish year");
        dtablemodel.addColumn("category");
        dtablemodel.addColumn("Total copies");
        dtablemodel.addColumn("Available copies");

        
        setData(bookcontroller.getAllBooks()); 
        // Đảm bảo bảng luôn chiếm hết chiều rộng của JScrollPane 
        Book_Table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Book_Table = new javax.swing.JTable();
        add_button = new javax.swing.JButton();
        refresh_button1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        titleField = new javax.swing.JTextField();
        idField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        authorField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        publisherField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        categoryField = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        delete_button = new javax.swing.JButton();
        update_button = new javax.swing.JButton();
        publishedYearField = new javax.swing.JTextField();
        search_button = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        totalCopiesField = new javax.swing.JTextField();
        avaCopiesField = new javax.swing.JTextField();

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 525, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(500, 400));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(58, 93, 156));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setBackground(new java.awt.Color(107, 173, 206));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("STAFF MANAGER");
        jLabel3.setOpaque(true);
        jLabel3.setPreferredSize(new java.awt.Dimension(30, 16));
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 40));

        jLabel4.setBackground(new java.awt.Color(107, 173, 206));
        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Nguyen Admin");
        jLabel4.setPreferredSize(new java.awt.Dimension(30, 16));
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 130, 30));

        jLabel6.setBackground(new java.awt.Color(107, 173, 206));
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Admin");
        jLabel6.setPreferredSize(new java.awt.Dimension(30, 16));
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, 130, 30));

        jLabel14.setBackground(new java.awt.Color(107, 173, 206));
        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/admin.png"))); // NOI18N
        jLabel14.setPreferredSize(new java.awt.Dimension(30, 16));
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, 30));

        jPanel2.setBackground(new java.awt.Color(107, 173, 206));

        jLabel13.setBackground(new java.awt.Color(107, 173, 206));
        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/LOGOHCMUTE.png"))); // NOI18N
        jLabel13.setPreferredSize(new java.awt.Dimension(30, 16));

        jLabel15.setBackground(new java.awt.Color(107, 173, 206));
        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/FITLOGO.png"))); // NOI18N
        jLabel15.setPreferredSize(new java.awt.Dimension(30, 16));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(426, 426, 426)
                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(438, 438, 438))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addContainerGap())
        );

        Book_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Book_Table.setToolTipText("");
        Book_Table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        Book_Table.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Book_Table.setFillsViewportHeight(true);
        Book_Table.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        Book_Table.setShowGrid(false);
        jScrollPane1.setViewportView(Book_Table);

        add_button.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        add_button.setText("ADD");
        add_button.setPreferredSize(new java.awt.Dimension(75, 30));
        add_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_buttonActionPerformed(evt);
            }
        });

        refresh_button1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        refresh_button1.setText("REFRESH");
        refresh_button1.setPreferredSize(new java.awt.Dimension(75, 30));
        refresh_button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refresh_button1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("TITLE:");

        titleField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        titleField.setAutoscrolls(false);
        titleField.setEnabled(false);
        titleField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titleFieldActionPerformed(evt);
            }
        });

        idField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        idField.setAutoscrolls(false);
        idField.setEnabled(false);
        idField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idFieldActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("ID:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("PUBLISHED YEAR:");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("AUTHOR:");

        authorField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        authorField.setAutoscrolls(false);
        authorField.setEnabled(false);
        authorField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authorFieldActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("PUBLISHER:");

        publisherField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        publisherField.setAutoscrolls(false);
        publisherField.setEnabled(false);
        publisherField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                publisherFieldActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setText("CATEGORY:");

        categoryField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        categoryField.setToolTipText("");
        categoryField.setAutoscrolls(false);
        categoryField.setEnabled(false);
        categoryField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryFieldActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel16.setText("TOTAL COPIES:");

        delete_button.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        delete_button.setText("DELETE");
        delete_button.setAutoscrolls(true);
        delete_button.setPreferredSize(new java.awt.Dimension(75, 30));
        delete_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_buttonActionPerformed(evt);
            }
        });

        update_button.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        update_button.setText("UPDATE");
        update_button.setAutoscrolls(true);
        update_button.setPreferredSize(new java.awt.Dimension(75, 30));
        update_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_buttonActionPerformed(evt);
            }
        });

        publishedYearField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        publishedYearField.setToolTipText("");
        publishedYearField.setEnabled(false);

        search_button.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        search_button.setText("SEARCH");
        search_button.setAutoscrolls(true);
        search_button.setPreferredSize(new java.awt.Dimension(75, 30));
        search_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_buttonActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel17.setText("AVAILABLE COPIES:");

        totalCopiesField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        totalCopiesField.setToolTipText("");
        totalCopiesField.setAutoscrolls(false);
        totalCopiesField.setEnabled(false);
        totalCopiesField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalCopiesFieldActionPerformed(evt);
            }
        });

        avaCopiesField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        avaCopiesField.setToolTipText("");
        avaCopiesField.setAutoscrolls(false);
        avaCopiesField.setEnabled(false);
        avaCopiesField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                avaCopiesFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(refresh_button1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(224, 224, 224)
                        .addComponent(add_button, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(delete_button, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(update_button, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(search_button, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(79, 79, 79)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(titleField, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(authorField, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(publisherField, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(categoryField)
                            .addComponent(publishedYearField, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(totalCopiesField)
                            .addComponent(avaCopiesField, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 929, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(32, 32, 32)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(titleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(authorField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(publishedYearField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addGap(32, 32, 32)
                                    .addComponent(categoryField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(publisherField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(totalCopiesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(avaCopiesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(refresh_button1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(add_button, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete_button, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(update_button, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search_button, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void delete_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_buttonActionPerformed
        /*BUTTON XÓA STAFF RA KHỎI DATABASE
        - Có thể xóa từng bản ghi hoặc nhiều bản ghi cùng lúc
        - Chọn trực tiếp trên bản và ấn vào button "DELETE"
        */
        int[] rows = this.Book_Table.getSelectedRows();
        
        if (rows.length < 1){
            JOptionPane.showMessageDialog(BookManager.this, "You haven't choose any book!");
        }
        else {
            int confirm = JOptionPane.showConfirmDialog(BookManager.this, "Are you sure to delete this book?");
            
            if (confirm == JOptionPane.YES_OPTION){
                try {
                    boolean delete = false;
                    String book_id;
                    // Điều chỉnh giá trị index khi xóa lần lượt từng bản ghi
                    for (int i = 0; i < rows.length; i++) {
                        if (!delete) {
                            book_id = String.valueOf(this.Book_Table.getValueAt(rows[i] - i, 0)); 
                        } else {
                            book_id = String.valueOf(this.Book_Table.getValueAt(rows[i], 0));
                            delete = true;
                        }
                        this.delete_Book(book_id);
                    }
                } catch (SQLException | ClassNotFoundException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Delete Error", JOptionPane.ERROR_MESSAGE);
                    Logger.getLogger(BookManager.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
        }
    }//GEN-LAST:event_delete_buttonActionPerformed

    private void categoryFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryFieldActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_categoryFieldActionPerformed

    private void publisherFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_publisherFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_publisherFieldActionPerformed

    private void authorFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authorFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_authorFieldActionPerformed

    private void idFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idFieldActionPerformed

    private void titleFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_titleFieldActionPerformed

    private void refresh_button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refresh_button1ActionPerformed
        //HÀM BUTTON REFRESH DỮ LIỆU TỪ DATABASE
        try {
            dtablemodel.setRowCount(0);
            this.setData(bookcontroller.getAllBooks());
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(BookManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_refresh_button1ActionPerformed

    private void add_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_buttonActionPerformed
        //HÀM BUTTON THÊM MỚI DỮ LIỆU VÀO DATABASE
        if (!isEditing) {
            this.set_field(true);
            this.isEditing = true;
        } else {
            if (this.idField.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "ID field cannot be empty.", "Input Error", JOptionPane.ERROR_MESSAGE);
            } else {
                try {
                    Book new_book = new Book();
                    new_book.setId(this.idField.getText());
                    new_book.setTitle(this.titleField.getText());
                    new_book.setAuthor(this.authorField.getText());
                    new_book.setPublisher(this.publisherField.getText());

                    // Kiểm tra và chuyển đổi publishedYear
                    String publishedYearStr = this.publishedYearField.getText().trim();
                    if (publishedYearStr.isEmpty()) {
                        new_book.setPublishedYear(0);
                    } else {
                        try {
                            new_book.setPublishedYear(Integer.parseInt(publishedYearStr));
                        } catch (NumberFormatException e) {
                            JOptionPane.showMessageDialog(this, "Invalid published year format: " + publishedYearStr, "Input Error", JOptionPane.ERROR_MESSAGE);
                            return;
                        }
                    }

                    new_book.setCategory(this.categoryField.getText());

                    // Kiểm tra và chuyển đổi totalCopies
                    String totalCopiesStr = this.totalCopiesField.getText().trim();
                    if (totalCopiesStr.isEmpty()) {
                        new_book.setTotalCopies(0);
                    } else {
                        try {
                            new_book.setTotalCopies(Integer.parseInt(totalCopiesStr));
                        } catch (NumberFormatException e) {
                            JOptionPane.showMessageDialog(this, "Invalid total copies format: " + totalCopiesStr, "Input Error", JOptionPane.ERROR_MESSAGE);
                            return;
                        }
                    }

                    // Kiểm tra và chuyển đổi availableCopies
                    String availableCopiesStr = this.avaCopiesField.getText().trim();
                    if (availableCopiesStr.isEmpty()) {
                        new_book.setAvailableCopies(0);
                    } else {
                        try {
                            new_book.setAvailableCopies(Integer.parseInt(availableCopiesStr));
                        } catch (NumberFormatException e) {
                            JOptionPane.showMessageDialog(this, "Invalid available copies format: " + availableCopiesStr, "Input Error", JOptionPane.ERROR_MESSAGE);
                            return;
                        }
                    }

                    this.add_Book(new_book);

                    JOptionPane.showMessageDialog(this, "Book inserted successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    this.set_field(false);
                    this.isEditing = false;
                } catch (SQLException | ClassNotFoundException ex) {
                    if (ex.getMessage().contains("Violation of PRIMARY KEY constraint")) {
                        JOptionPane.showMessageDialog(this, "Error: ID " + this.idField.getText() + " already exists.", "Database Error", JOptionPane.ERROR_MESSAGE);
                    }
                    Logger.getLogger(BookManager.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }  
    }//GEN-LAST:event_add_buttonActionPerformed

    private void update_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_buttonActionPerformed
        // BUTTON UPDATE THÔNG TIN STAFF
        int row = this.Book_Table.getSelectedRow();
//        Staff staff = this.Staff_Table.getValueAt(row);
        if (row == -1) {
            JOptionPane.showMessageDialog(BookManager.this, "You haven't choose any Book!");
        } else {
            if (!isEditing) {
                this.set_field_value(row);
                this.set_field(true);
                this.idField.setEnabled(false);
                isEditing = true;
            } else {
                try {
                    
                    Book new_book = new Book();
                    new_book.setId(this.idField.getText());
                    new_book.setTitle(this.titleField.getText());
                    new_book.setAuthor(this.authorField.getText());
                    new_book.setPublisher(this.publisherField.getText());
                    new_book.setPublishedYear(Integer.parseInt(this.publishedYearField.getText()));
                    new_book.setCategory(this.categoryField.getText());
                    new_book.setTotalCopies(Integer.parseInt(this.totalCopiesField.getText()));
                    new_book.setAvailableCopies(Integer.parseInt(this.avaCopiesField.getText()));
                    
                    this.update_Book(new_book, new_book.getId());
                    this.set_field(false);
                    isEditing = false;
                    
                } catch (SQLException | ClassNotFoundException ex) {
                    Logger.getLogger(BookManager.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
        }
    }//GEN-LAST:event_update_buttonActionPerformed

    private void search_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_buttonActionPerformed
        // BUTTON TÌM KIẾM THEO CÁC TRƯỜNG, KHÔNG PHÂN BIỆT HOA THƯỜNG
        if (!this.isEditing){
            this.set_field(true);
            this.isEditing = true;
        } else {
            this.isEditing = false;
            this.set_field(false);
            String id = this.idField.getText();
            String title = this.titleField.getText();
            String author = this.authorField.getText();
            String publisher = this.publisherField.getText();
            // Kiểm tra và chuyển đổi publishedYear
            int publishedYear = -1;  // Giá trị mặc định
            String publishedYearStr = this.publishedYearField.getText().trim();
            if (!publishedYearStr.isEmpty()) {
                try {
                    publishedYear = Integer.parseInt(publishedYearStr);
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Invalid published year format: " + publishedYearStr, "Input Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }

            String category = this.categoryField.getText().trim();

            // Kiểm tra và chuyển đổi totalCopies
            int totalcopies = -1;  // Giá trị mặc định
            String totalcopiesStr = this.totalCopiesField.getText().trim();
            if (!totalcopiesStr.isEmpty()) {
                try {
                    totalcopies = Integer.parseInt(totalcopiesStr);
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Invalid total copies format: " + totalcopiesStr, "Input Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }

            // Kiểm tra và chuyển đổi availableCopies
            int availablecopies = -1;  // Giá trị mặc định
            String availablecopiesStr = this.avaCopiesField.getText().trim();
            if (!availablecopiesStr.isEmpty()) {
                try {
                    availablecopies = Integer.parseInt(availablecopiesStr);
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Invalid available copies format: " + availablecopiesStr, "Input Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }


            List<Book> books = null;
            try {
                books = this.bookcontroller.searchBooks(id, title, author, publisher, publishedYear, category, totalcopies, availablecopies);

                this.setData(books);
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(BookManager.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
        
        

    }//GEN-LAST:event_search_buttonActionPerformed

    private void totalCopiesFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalCopiesFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalCopiesFieldActionPerformed

    private void avaCopiesFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_avaCopiesFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_avaCopiesFieldActionPerformed

    /**
     * @param args the command line arguments
     * @throws java.sql.SQLException
     * @throws java.lang.ClassNotFoundException
     */
//    public static void main(String args[]) throws SQLException, ClassNotFoundException {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(BookManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(BookManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(BookManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(BookManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                try {
//                    new BookManager().setVisible(true);
//                    
//                } catch (SQLException | ClassNotFoundException ex) {
//                    Logger.getLogger(BookManager.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Book_Table;
    private javax.swing.JButton add_button;
    private javax.swing.JTextField authorField;
    private javax.swing.JTextField avaCopiesField;
    private javax.swing.JTextField categoryField;
    private javax.swing.JButton delete_button;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField publishedYearField;
    private javax.swing.JTextField publisherField;
    private javax.swing.JButton refresh_button1;
    private javax.swing.JButton search_button;
    private javax.swing.JTextField titleField;
    private javax.swing.JTextField totalCopiesField;
    private javax.swing.JButton update_button;
    // End of variables declaration//GEN-END:variables

    private String toString(char[] password) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
